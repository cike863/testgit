<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 可以扫描controller、service、...
	这里让扫描controller，指定controller的包
	 -->
	 <!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >  
        <property name="messageConverters">     
	         <list>     
	             <bean class = "org.springframework.http.converter.StringHttpMessageConverter">     
	                <property name = "supportedMediaTypes">  
	                      <list>  
	                          <value>text/html;charset=UTF-8</value>     
	                     </list>     
	                </property>     
	             </bean>     
	         </list>     
	   </property>    
    </bean>   -->
	<mvc:annotation-driven/>
	<context:component-scan base-package="com.xsbweb"></context:component-scan>
	
	<!-- 静态资源解析
	包括 ：js、css、img、..
	 -->
		
	<!--注解映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
	<!--注解适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->
	
	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
	mvc:annotation-driven默认加载很多的参数绑定方法，
	比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发时使用mvc:annotation-driven
	 -->
	

	<!-- 视图解析器
	解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
	 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 自定义参数绑定 -->
	
	<!-- 校验器 -->
	
	<mvc:annotation-driven validator="validator" conversion-service="conversion-service" />
    
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
        <!--不设置则默认为classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="validatemessageSource"/>
    </bean>
    <bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
    <bean id="validatemessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <property name="basename" value="classpath:CustomValidationMessages"/>  
        <property name="fileEncodings" value="utf-8"/>  
        <property name="cacheSeconds" value="120"/>  
    </bean>
	
	
	<!-- 全局异常处理器 只要实现HandlerExceptionResolver接口就是全局异常处理器-->
	<bean class="com.xsbweb.exception.ApplicationExceptionResolver"></bean>
	
	
	<!-- 上传图片 -->
	 <bean id="multipartResolver"  
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >  
   	<property name="maxUploadSize">  
       <value>80000000</value>  
   </property>  
   <property name="maxInMemorySize">  
       <value>40960</value>  
   </property>  
   </bean> 
	<!-- 文件上传 -->
	
	<!-- 拦截器 -->
   <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.xsbweb.interceptor.LoginInterceptor"></bean> 
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/app/**" />
			<bean class="com.xsbweb.interceptor.AppValidateInterceptor"></bean> 
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/app/**" />
			<bean class="com.xsbweb.interceptor.AppToJ2eeInterceptor"></bean> 
		</mvc:interceptor>
	</mvc:interceptors>
</beans>